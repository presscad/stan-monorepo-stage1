Data
====

1. election88.data.R
- N            : number of observations
- n_age        : number of age groups
- n_edu        : number of edu groups
- n_state      : number of states
- n_age_edu    : number of age-edu groups
- n_region_full: number of regions
- y            : vote outcome
- black        : is black? 1: Yes, 0: No
- female       : is female? 1: Yes, 0: No
- age          : age category
- state        : state number
- age_edu      : age-edu value
- region_full  : region number
- edu          : education level
- v_prev_full  : preview values

2. pilots.data.R
- N          : number of observations
- n_scenarios: number of scenarios
- n_groups   : number of groups
- n_treatment: number of treatments
- n_airports : number of airports
- airport    : airport number
- treatment  : treatment number
- scenario_id: scenario id
- group_id   : group id
- y          : score

3. radon.data.R
- N     : number of observations
- J     : number of counties
- radon : radon measurement
- x     : house-level first-floor indicator
- y     : log of the home radon level
- county: county number
- u     : county-level uranium measure

4. schools.data.R
- N      : number of schools
- sigma_y: standard error of effect estimates
- y      : estimated treatment effects

Models
======

1. Multilevel model with varying intercept
radon.stan: lmer(y ~ 1 + (1 | county))
election88.stan: glmer(y ~ black + female + female:black + (1 | age) + (1 | edu)
			   + (1 | age_edu) + (1 | state), 
		       family=binomial(link="logit"))

2. Multilevel model with redundant parameterization
radon_redundant.stan: lmer(y ~ 1 + (1 | county))

3. Multilevel model with parameter expansion
pilots_expansion.stan    : lmer(y ~ 1 + (1 | treatment) + (1 | airport))
election88_expansion.stan: glmer(y ~ black + female + female:black + (1 | age) + (1 | edu)
		              	     + (1 | age_edu) + (1 | state), 
		                 family=binomial(link="logit"))

4. Multilevel model with several group level predictors
pilots.stan               : lmer(y ~1 + (1 | treatment) + (1 | airport))

5. Above models with Matt trick
radon_redundant_chr.stan: lmer(y ~ 1 + (1 | county))
radon.stan_chr: lmer(y ~ 1 + (1 | county))
pilots_chr.stan               : lmer(y ~1 + (1 | group) + (1 | scenario))

6. Other
schools.stan: lmer(y ~ theta)
item_response.stan: glmer(y ~ (g:a | k,j) - (g:b | k), family=binomial(link="logit"))
