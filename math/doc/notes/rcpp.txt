Creating an Rcpp 0.9.6 Module
======================================================================

Basic Procedure
----------------------------------------------------------------------

SHELL
$ mkdir temp
$ cd temp

R
> setwd('temp')
> install.packages('Rcpp')    // should get Rcpp_0.9.6.tgz
> require('Rcpp')             // should load Rcpp
> Rcpp.package.skeleton(name='mypkg',module=TRUE)
                              // creates temp/mykg

SHELL
$ R CMD build mypkg           // creates temp/mypkg_1.0.tar.gz
$ R CMD check mypkg           // OK, with some warnings
$ R CMD install mypkg         // DONE, with some warnings

R
> require(mypkg)              // should return TRUE
> rcpp_hello_world()          // calls function declared and defined in:
                              //   temp/mypkg/src/hello_world.h
                              //   temp/mypkg/src/hello_world.cpp

> bar(2)                      // returns 4
> hello()                     // crashes R by (on purpose) throwing
                              //      a std::range_error


Using 3rd Party (Header-only) Libraries
----------------------------------------------------------------------

SHELL
$ mkdir mypkg/include                 // make location to put them
$ ln -s ~/stan/src mypkg/include/src  // create mypkg/include/src
                                      // symbolic link to stan source C++
$ ln -s ~/stan/lib mypkg/include/lib  // create mypkg/include/lib
                                      // symbolic link to Eigen/Boost C++

EDITOR
% open for editing: mypkg/src/Makevars
% after the lib declaration,

PKG_LIBS = `$(R_HOME)/bin/Rscript -e "Rcpp:::LdFlags()"`

add:

PKG_CPPFLAGS= -I ../include/lib -I ../include/src
                             // now you can use the header-only libs


SHELL
$ cd to directory above mypkg
$ R CMD remove mypkg          // removes installed pkg
$ R CMD build mypkg
$ R CMD check mypkg
$ R CMD install mypkg

R
> quit()

R (in a new session)
> require('mypkg')
> foo(2,3)                 // should be new version of foo

