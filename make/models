##
# Models (to be passed through stanc)
##
MODEL_HEADER := src/stan/model/model_header.hpp

.PRECIOUS: models/%$(EXE)
models/%$(EXE) : models/%.o bin/libstan.a
	@mkdir -p $(dir $@)
	@echo ''
	@echo '--- Linking C++ model ---'
	$(LINK.c) $(OUTPUT_OPTION) $< $(LDLIBS)
	@echo ''
	@echo '--- Copying model ---'
	cp src/$(basename $@).stan $(basename $@).stan
	@echo '--- Copying data ---'
	-cp src/$(basename $@).Rdata $(basename $@).Rdata

.PRECIOUS: models/%.cpp
models/%.cpp : src/models/%.stan $(MODEL_HEADER)$(PCH) bin/stanc$(EXE)
	@mkdir -p $(dir $@)
	@echo ''
	@echo '--- Translating Stan graphical model to C++ code ---'
	bin/stanc$(EXE) $< --o=$@

#.PRECIOUS: models/%.o
#models/%.o : models/%.cpp
#	@mkdir -p $(dir $@)
#	@echo ''
#	@echo '--- Compiling C++ model ---'
#	$(COMPILE.c) $(OUTPUT_OPTION) $<


$(MODEL_HEADER).gch : $(MODEL_HEADER)
	@echo ''
	@echo '--- Precompiling $(MODEL_HEADER) for g++ ---'
	$(COMPILE.c) $(OUTPUT_OPTION) $<

$(MODEL_HEADER).pch : $(MODEL_HEADER)
	@echo ''
	@echo '--- Precompiling $(MODEL_HEADER) for clang++ ---'
	$(COMPILE.c) $(OUTPUT_OPTION) $<

$(MODEL_HEADER).d : $(MODEL_HEADER)
	@if test -d $(dir $@); \
	then \
	(set -e; \
	rm -f $@; \
	$(CC) $(CFLAGS) $(TARGET_ARCH) -MM $< > $@.$$$$; \
	sed -e 's,\($(notdir $*)\)\.o[ :]*,$(dir $@)\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$ ); \
	fi

##
# Rule for generating dependencies.
# Applies to all *.cpp files in src.
# Test cpp files are handled slightly differently.
##
models/%.d : models/%.cpp
	@if test -d $(dir $@); \
	then \
	(set -e; \
	rm -f $@; \
	$(CC) $(CFLAGS) $(TARGET_ARCH) -MM $< > $@.$$$$; \
	sed -e 's,\($(notdir $*)\)\.o[ :]*,$(dir $@)\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$);\
	fi



##
# Will generate dependencies.
##
ifneq (,$(filter models/%,$(MAKECMDGOALS)))
  -include $(addsuffix .d,$(subst $(EXE),,$(filter models/%,$(MAKECMDGOALS))))
  -include $(MODEL_HEADER).d
endif
